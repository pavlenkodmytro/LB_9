#include <iostream>    // Підключення бібліотеки для вводу/виводу
#include <ctime>       // Підключення бібліотеки для роботи з часом
#include <cstdlib>     // Підключення бібліотеки для генерації випадкових чисел

// Функція для обміну значеннями двох змінних
void swap(int& a, int & b) {
    int temp = a; // Збереження значення a в тимчасовій змінній
    a = b;        // Присвоєння значення b змінній a
    b = temp;     // Присвоєння значення temp (колишнє a) змінній b
}

int main() {
    srand(time(NULL)); // Ініціалізація генератора випадкових чисел з поточним часом
    const int size = 10; // Визначення розміру масиву
    int arr[size]; // Оголошення масиву

    // Заповнення масиву випадковими числами від 0 до 99
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 100; // Генерація випадкових чисел
    }

    // Виведення початкового масиву
    std::cout << "Initial array: "; 
    for (int i = 0; i < size; i++) {
        std::cout << arr[i] << " "; // Виведення елементів масиву
    }
    std::cout << std::endl; // Перехід на новий рядок

    // Ініціалізація індексів максимального та мінімального значень
    int maxIndex = 0; // Індекс для максимального значення
    int minIndex = 0; // Індекс для мінімального значення

    // Цикл для знаходження індексів максимального та мінімального значень
    for (int i = 1; i < size; i++) {
        if (arr[i] > arr[maxIndex]) { // Якщо знайдене значення більше поточного максимального
            maxIndex = i; // Оновлення індексу максимального значення
        }
        if (arr[i] < arr[minIndex]) { // Якщо знайдене значення менше поточного мінімального
            minIndex = i; // Оновлення індексу мінімального значення
        }
    }

    // Обмін значеннями максимального та мінімального елементів масиву
    swap(arr[maxIndex], arr[minIndex]);

    // Виведення результуючого масиву
    std::cout << "Resulting array: "; 
    for (int i = 0; i < size; i++) {
        std::cout << arr[i] << " "; // Виведення елементів масиву
    }
    std::cout << std::endl; // Перехід на новий рядок

    return 0; // Завершення програми
}
